{
  "name": "react-use-intercom",
  "author": "devrnt",
  "module": "dist/index.mjs",
  "description": "React Intercom integration without the hassle, driven by hooks.",
  "homepage": "https://github.com/devrnt/react-use-intercom#readme",
  "version": "5.0.0",
  "license": "MIT",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "sideEffects": false,
  "repository": {
    "type": "git",
    "url": "https://github.com/devrnt/react-use-intercom"
  },
  "bugs": {
    "url": "https://github.com/devrnt/react-use-intercom/issues"
  },
  "files": [
    "dist",
    "src"
  ],
  "engines": {
    "node": ">=18"
  },
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.js",
      "import": "./dist/index.mjs",
      "browser": "./dist/index.mjs"
    }
  },
  "keywords": [
    "react",
    "reactjs",
    "intercom",
    "intercomjs",
    "react-intercom",
    "intercom-react",
    "typescript",
    "react-hooks",
    "react-use-intercom",
    "nextjs",
    "gatsby"
  ],
  "peerDependencies": {
    "react": ">=16.8.0",
    "react-dom": ">=16.8.0"
  },
  "size-limit": [
    {
      "path": "./dist/index.js",
      "limit": "3 kB"
    },
    {
      "path": "./dist/index.mjs",
      "limit": "3 kB"
    }
  ],
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "devDependencies": {
    "@size-limit/preset-small-lib": "^7.0.3",
    "@testing-library/react": "^13.4.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@types/jest": "^27.5.2",
    "@types/node": "^18.11.19",
    "@types/react": "^18.0.20",
    "@types/react-dom": "^18.0.6",
    "cypress": "12.7.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-test-renderer": "^18.0.0",
    "size-limit": "^7.0.3",
    "source-map": "0.6.1",
    "ts-jest": "^29.0.5",
    "tslib": "^2.0.3",
    "tsup": "^6.6.3",
    "typescript": "^4.9.4"
  },
  "scripts": {
    "dev": "tsup src/index.ts --format esm,cjs --sourcemap --watch --dts --external react",
    "build": "tsup",
    "test": "jest test",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "e2e": "cypress run",
    "e2e:open": "cypress open",
    "lint": "eslint src test",
    "lint:fix": "eslint --fix",
    "bundlesize": "pnpm build && size-limit"
  }
}