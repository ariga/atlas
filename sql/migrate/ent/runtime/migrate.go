// Copyright 2021-present The Atlas Authors. All rights reserved.
// This source code is licensed under the Apache 2.0 license found
// in the LICENSE file in the root directory of this source tree.

// Code generated by entc, DO NOT EDIT.

package runtime

import (
	"context"
	"database/sql"

	"ariga.io/atlas/sql/migrate/ent/migrate"
	entsql "entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/schema"
)

type initSchemaMigratorer interface {
	InitSchemaMigrator(func(ctx context.Context) error)
}

// InitSchemaMigrator stitches in the Ent migration engine to the mysql.Driver at runtime. This is necessary
// because the Ent migration engine imports atlas and therefore would introduce a cyclic dependency.
func InitSchemaMigrator(drv initSchemaMigratorer, db *sql.DB, dialect string) {
	mgr := migrate.NewSchema(entsql.NewDriver(entsql.Conn{ExecQuerier: db}, dialect))
	drv.InitSchemaMigrator(func(ctx context.Context) error {
		return mgr.Create(ctx, schema.WithAtlas(true))
	})
}
