// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go ariga.io/atlas/sql/postgres

package postgres

#TypeInt64:    "int64"
#TypeGeometry: "geometry"

_#crdbIndexesQuery: "\nSELECT\n\tt.relname AS table_name,\n\ti.relname AS index_name,\n\ta.attname AS column_name,\n\tidx.indisprimary AS primary,\n\tidx.indisunique AS unique,\n\tc.contype AS constraint_type,\n\tpgi.indexdef create_stmt,\n\tpg_get_expr(idx.indpred, idx.indrelid) AS predicate,\n\tpg_get_indexdef(idx.indexrelid, idx.ord, false) AS expression,\n\tpg_catalog.obj_description(i.oid, 'pg_class') AS comment\n\tFROM\n\t(\n\t\tselect\n\t\t\t*,\n\t\t\tgenerate_series(1,array_length(i.indkey,1)) as ord,\n\t\t\tunnest(i.indkey) AS key\n\t\tfrom pg_index i\n\t) idx\n\tJOIN pg_class i ON i.oid = idx.indexrelid\n\tJOIN pg_class t ON t.oid = idx.indrelid\n\tJOIN pg_namespace n ON n.oid = t.relnamespace\n\tLEFT JOIN pg_constraint c ON idx.indexrelid = c.conindid\n\tLEFT JOIN pg_indexes pgi ON pgi.tablename = t.relname AND indexname = i.relname AND n.nspname = pgi.schemaname\n\tLEFT JOIN pg_attribute a ON (a.attrelid, a.attnum) = (idx.indrelid, idx.key)\nWHERE\n\tn.nspname = $1\n\tAND t.relname IN (%s)\n\tAND COALESCE(c.contype, '') <> 'f'\nORDER BY\n\ttable_name, index_name, idx.ord\n" // `
			// SELECT
			// t.relname AS table_name,
			// i.relname AS index_name,
			// a.attname AS column_name,
			// idx.indisprimary AS primary,
			// idx.indisunique AS unique,
			// c.contype AS constraint_type,
			// pgi.indexdef create_stmt,
			// pg_get_expr(idx.indpred, idx.indrelid) AS predicate,
			// pg_get_indexdef(idx.indexrelid, idx.ord, false) AS expression,
			// pg_catalog.obj_description(i.oid, 'pg_class') AS comment
			// FROM
			// (
			// select
			// *,
			// generate_series(1,array_length(i.indkey,1)) as ord,
			// unnest(i.indkey) AS key
			// from pg_index i
			// ) idx
			// JOIN pg_class i ON i.oid = idx.indexrelid
			// JOIN pg_class t ON t.oid = idx.indrelid
			// JOIN pg_namespace n ON n.oid = t.relnamespace
			// LEFT JOIN pg_constraint c ON idx.indexrelid = c.conindid
			// LEFT JOIN pg_indexes pgi ON pgi.tablename = t.relname AND
			// indexname = i.relname AND n.nspname = pgi.schemaname
			// LEFT JOIN pg_attribute a ON (a.attrelid, a.attnum) =
			// (idx.indrelid, idx.key)
			// WHERE
			// n.nspname = $1
			// AND t.relname IN (%s)
			// AND COALESCE(c.contype, '') <> 'f'
			// ORDER BY
			// table_name, index_name, idx.ord
			// `

_#crdbColumnsQuery: "\nSELECT\n\tt1.table_name,\n\tt1.column_name,\n\tt1.data_type,\n\tpg_catalog.format_type(a.atttypid, a.atttypmod) AS format_type,\n\tt1.is_nullable,\n\tt1.column_default,\n\tt1.character_maximum_length,\n\tt1.numeric_precision,\n\tt1.datetime_precision,\n\tt1.numeric_scale,\n\tt1.interval_type,\n\tt1.character_set_name,\n\tt1.collation_name,\n\tt1.is_identity,\n\tt5.start_value as identity_start,\n\tt5.increment_by as identity_increment,\n\tt5.last_value AS identity_last,\n\tt1.identity_generation,\n\tt1.generation_expression,\n\tcol_description(t3.oid, \"ordinal_position\") AS comment,\n\tt4.typtype,\n\tt4.typelem,\n\t(CASE WHEN t4.typcategory = 'A' AND t4.typelem <> 0 THEN (SELECT t.typtype FROM pg_catalog.pg_type t WHERE t.oid = t4.typelem) END) AS elemtyp,\n\tt4.oid\nFROM\n\t\"information_schema\".\"columns\" AS t1\n\tJOIN pg_catalog.pg_namespace AS t2 ON t2.nspname = t1.table_schema\n\tJOIN pg_catalog.pg_class AS t3 ON t3.relnamespace = t2.oid AND t3.relname = t1.table_name\n\tJOIN pg_catalog.pg_attribute AS a ON a.attrelid = t3.oid AND a.attname = t1.column_name\n\tLEFT JOIN pg_catalog.pg_type AS t4\n\tON t1.udt_name = t4.typname\n\tLEFT JOIN pg_sequences AS t5\n\tON quote_ident(t5.schemaname) || '.' || quote_ident(t5.sequencename) = btrim(btrim(t1.column_default, 'nextval('''), '''::REGCLASS)')\nWHERE\n\tt1.table_schema = $1 AND t1.table_name IN (%s)\nORDER BY\n\tt1.table_name, t1.ordinal_position\n" // `
			// SELECT
			// t1.table_name,
			// t1.column_name,
			// t1.data_type,
			// pg_catalog.format_type(a.atttypid, a.atttypmod) AS format_type,
			// t1.is_nullable,
			// t1.column_default,
			// t1.character_maximum_length,
			// t1.numeric_precision,
			// t1.datetime_precision,
			// t1.numeric_scale,
			// t1.interval_type,
			// t1.character_set_name,
			// t1.collation_name,
			// t1.is_identity,
			// t5.start_value as identity_start,
			// t5.increment_by as identity_increment,
			// t5.last_value AS identity_last,
			// t1.identity_generation,
			// t1.generation_expression,
			// col_description(t3.oid, "ordinal_position") AS comment,
			// t4.typtype,
			// t4.typelem,
			// (CASE WHEN t4.typcategory = 'A' AND t4.typelem <> 0 THEN
			// (SELECT t.typtype FROM pg_catalog.pg_type t WHERE t.oid =
			// t4.typelem) END) AS elemtyp,
			// t4.oid
			// FROM
			// "information_schema"."columns" AS t1
			// JOIN pg_catalog.pg_namespace AS t2 ON t2.nspname =
			// t1.table_schema
			// JOIN pg_catalog.pg_class AS t3 ON t3.relnamespace = t2.oid AND
			// t3.relname = t1.table_name
			// JOIN pg_catalog.pg_attribute AS a ON a.attrelid = t3.oid AND
			// a.attname = t1.column_name
			// LEFT JOIN pg_catalog.pg_type AS t4
			// ON t1.udt_name = t4.typname
			// LEFT JOIN pg_sequences AS t5
			// ON quote_ident(t5.schemaname) || '.' ||
			// quote_ident(t5.sequencename) = btrim(btrim(t1.column_default,
			// 'nextval('''), '''::REGCLASS)')
			// WHERE
			// t1.table_schema = $1 AND t1.table_name IN (%s)
			// ORDER BY
			// t1.table_name, t1.ordinal_position
			// `
