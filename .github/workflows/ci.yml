# # # # # # # # # # # # # # # #
# CODE GENERATED - DO NOT EDIT
# # # # # # # # # # # # # # # #
name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - uses: actions/checkout@v2
    - name: Run linters
      uses: golangci/golangci-lint-action@v3
      with:
        args: --verbose
  generate-cmp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: run "go generate ./..."
        run: go generate ./...
      - name: go generate cmd/atlas
        working-directory: cmd/atlas
        run: go generate ./...
      - name: Verify generated files are checked in properly
        run: |
          status=$(git status --porcelain | grep -v "go.\(sum\|mod\)" | cat)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            exit 1
          fi

  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.18', '1.19' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run sql tests
        run: go test -race ./...
        working-directory: sql
      - name: Run schemahcl tests
        run: go test -race ./...
        working-directory: schemahcl

  cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.19' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run cli tests
        run: go test -race ./...
        working-directory: cmd/atlas

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for HCL
        working-directory: internal/integration/hclsqlspec
        run: go test -race -count=2 -v ./...

  
  integration-mysql56:
    runs-on: ubuntu-latest
    services:
      mysql56:
        image: mysql:5.6.35
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for mysql56
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/mysql56|MySQL.*/.*/mysql56|MySQL.*/.*/.*/mysql56" -dialect=mysql56 ./...
  
  integration-mysql57:
    runs-on: ubuntu-latest
    services:
      mysql57:
        image: mysql:5.7.26
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3307:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for mysql57
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/mysql57|MySQL.*/.*/mysql57|MySQL.*/.*/.*/mysql57" -dialect=mysql57 ./...
  
  integration-mysql8:
    runs-on: ubuntu-latest
    services:
      mysql8:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3308:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for mysql8
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/mysql8|MySQL.*/.*/mysql8|MySQL.*/.*/.*/mysql8" -dialect=mysql8 ./...
  
  integration-maria107:
    runs-on: ubuntu-latest
    services:
      maria107:
        image: mariadb:10.7
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 4306:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for maria107
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/maria107|MySQL.*/.*/maria107|MySQL.*/.*/.*/maria107" -dialect=maria107 ./...
  
  integration-maria102:
    runs-on: ubuntu-latest
    services:
      maria102:
        image: mariadb:10.2.32
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 4307:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for maria102
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/maria102|MySQL.*/.*/maria102|MySQL.*/.*/.*/maria102" -dialect=maria102 ./...
  
  integration-maria103:
    runs-on: ubuntu-latest
    services:
      maria103:
        image: mariadb:10.3.13
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 4308:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for maria103
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="MySQL.*/maria103|MySQL.*/.*/maria103|MySQL.*/.*/.*/maria103" -dialect=maria103 ./...
  
  integration-postgres10:
    runs-on: ubuntu-latest
    services:
      postgres10:
        image: postgres:10
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: pass
        ports:
          - 5430:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for postgres10
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Postgres.*/postgres10|Postgres.*/.*/postgres10|Postgres.*/.*/.*/postgres10" -dialect=postgres10 ./...
  
  integration-postgres11:
    runs-on: ubuntu-latest
    services:
      postgres11:
        image: postgres:11
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: pass
        ports:
          - 5431:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for postgres11
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Postgres.*/postgres11|Postgres.*/.*/postgres11|Postgres.*/.*/.*/postgres11" -dialect=postgres11 ./...
  
  integration-postgres12:
    runs-on: ubuntu-latest
    services:
      postgres12:
        image: postgres:12.3
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for postgres12
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Postgres.*/postgres12|Postgres.*/.*/postgres12|Postgres.*/.*/.*/postgres12" -dialect=postgres12 ./...
  
  integration-postgres13:
    runs-on: ubuntu-latest
    services:
      postgres13:
        image: postgres:13.1
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: pass
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for postgres13
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Postgres.*/postgres13|Postgres.*/.*/postgres13|Postgres.*/.*/.*/postgres13" -dialect=postgres13 ./...
  
  integration-postgres14:
    runs-on: ubuntu-latest
    services:
      postgres14:
        image: postgres:14
        env:
          POSTGRES_DB: test
          POSTGRES_PASSWORD: pass
        ports:
          - 5434:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for postgres14
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Postgres.*/postgres14|Postgres.*/.*/postgres14|Postgres.*/.*/.*/postgres14" -dialect=postgres14 ./...
  
  integration-tidb5:
    runs-on: ubuntu-latest
    services:
      tidb5:
        image: pingcap/tidb:v5.4.0
        
        ports:
          - 4309:4000
        
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for tidb5
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="TiDB.*/tidb5|TiDB.*/.*/tidb5|TiDB.*/.*/.*/tidb5" -dialect=tidb5 ./...
  
  integration-tidb6:
    runs-on: ubuntu-latest
    services:
      tidb6:
        image: pingcap/tidb:v6.0.0
        
        ports:
          - 4310:4000
        
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for tidb6
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="TiDB.*/tidb6|TiDB.*/.*/tidb6|TiDB.*/.*/.*/tidb6" -dialect=tidb6 ./...
  
  integration-sqlite:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for sqlite
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="SQLite.*" -dialect=sqlite ./...
  
  integration-cockroach:
    runs-on: ubuntu-latest
    services:
      cockroach:
        image: ghcr.io/ariga/cockroachdb-single-node:v21.2.11
        
        ports:
          - 26257:26257
        
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run integration tests for cockroach
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="Cockroach.*/Cockroach|Cockroach.*/.*/Cockroach|Cockroach.*/.*/.*/Cockroach" -dialect=cockroach ./...
  