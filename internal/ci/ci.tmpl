# # # # # # # # # # # # # # # #
# CODE GENERATED - DO NOT EDIT
# # # # # # # # # # # # # # # #
name: Continuous Integration
on:
  workflow_run:
    workflows:
      - "Build Docker"
    types: 
      - completed

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - uses: actions/checkout@v2
    - name: Run linters
      uses: golangci/golangci-lint-action@v3
      with:
        args: --verbose
  generate-cmp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: run "go generate ./..."
        run: go generate ./...
      - name: run "go generate internal/typedoc"
        working-directory: internal/typedoc
        run: go generate ./...
      - name: Verify generated files are checked in properly
        run: |
          status=$(git status --porcelain)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            exit 1
          fi

  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.17', '1.18' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: {{ "${{ matrix.go }}" }}
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run sql tests
        run: go test -race ./...
        working-directory: sql
      - name: Run schema tests
        run: go test -race ./...
        working-directory: schema
      - name: Run cli tests
        run: go test -race ./...
        working-directory: cmd

  {{ range $ }}
  integration-{{ .Version }}:
    runs-on: ubuntu-latest
    {{ if .Image }}services:
      {{ .Version }}:
        image: {{ .Image }}
        {{ with .Env }}env:{{ range . }}
          {{ . }}{{ end }}
        {{- end }}
        {{ with .Ports }}ports:{{ range . }}
          - {{ . }}{{ end }}
        {{- end }}
        {{ with .Options }}options: >-{{ range . }}
          {{ . }}{{ end }}
        {{- end }}{{ end }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run integration tests for {{ .Version }}
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="{{ .Regex }}" -dialect={{ .Version }} ./...
  {{ end }}