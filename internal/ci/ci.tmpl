# # # # # # # # # # # # # # # #
# CODE GENERATED - DO NOT EDIT
# # # # # # # # # # # # # # # #
name: Continuous Integration
on:
  pull_request:
    paths-ignore:
      - 'doc/**'
  push:
    branches:
      - master
    paths-ignore:
      - 'doc/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - uses: actions/checkout@v2
    - name: Run linters
      uses: golangci/golangci-lint-action@v3
      with:
        args: --verbose
  generate-cmp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: '1.19'
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Install stringer
        run: go install golang.org/x/tools/cmd/stringer@latest
      - name: run "go generate ./..."
        run: go generate ./...
      - name: go generate cmd/atlas
        working-directory: cmd/atlas
        run: go generate ./...
      - name: Verify generated files are checked in properly
        run: |
          status=$(git status --porcelain | grep -v "go.\(sum\|mod\)" | cat)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            exit 1
          fi

  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.18', '1.19' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: {{ "${{ matrix.go }}" }}
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run sql tests
        run: go test -race ./...
        working-directory: sql
      - name: Run schemahcl tests
        run: go test -race ./...
        working-directory: schemahcl

  cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.19' ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: {{ "${{ matrix.go }}" }}
      - uses: actions/cache@v2.1.5
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run cli tests
        run: go test -race ./...
        working-directory: cmd/atlas

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run integration tests for HCL
        working-directory: internal/integration/hclsqlspec
        run: go test -race -count=2 -v ./...

  revisions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Checkout origin/master
        run: git checkout origin/master
      - name: Create revisions from master
        run: go run main.go migrate apply --dir file://internal/cmdapi/testdata/sqlite --url sqlite://db?_fk=1
        working-directory: cmd/atlas
      - name: Checkout previous HEAD
        run: git checkout -
      - name: Migrate revisions table to HEAD
        run: go run main.go migrate apply --dir file://internal/cmdapi/testdata/sqlite --url sqlite://db?_fk=1
        working-directory: cmd/atlas

{{- range $ }}
  integration-{{ .Version }}:
    runs-on: ubuntu-latest
    {{ if .Image }}services:
      {{ .Version }}:
        image: {{ .Image }}
        {{ with .Env }}env:{{ range . }}
          {{ . }}{{ end }}
        {{- end }}
        {{ with .Ports }}ports:{{ range . }}
          - {{ . }}{{ end }}
        {{- end }}
        {{ with .Options }}options: >-{{ range . }}
          {{ . }}{{ end }}
        {{- end }}{{ end }}
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - uses: actions/cache@v2.1.6
        with:
          path: ~/go/pkg/mod
          key: {{ "${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" }}
          restore-keys: |
            {{ "${{ runner.os }}-go-" }}
      - name: Run integration tests for {{ .Version }}
        working-directory: internal/integration
        run: go test -race -count=2 -v -run="{{ .Regex }}" -version="{{ .Version }}" ./...
{{ end }}
