// Code generated by entc, DO NOT EDIT.

package defaultcontainer

import (
	"fmt"
)

const (
	// Label holds the string label denoting the defaultcontainer type in the database.
	Label = "default_container"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStringdef holds the string denoting the stringdef field in the database.
	FieldStringdef = "stringdef"
	// FieldInt holds the string denoting the int field in the database.
	FieldInt = "int"
	// FieldBool holds the string denoting the bool field in the database.
	FieldBool = "bool"
	// FieldEnum holds the string denoting the enum field in the database.
	FieldEnum = "enum"
	// FieldFloat holds the string denoting the float field in the database.
	FieldFloat = "float"
	// Table holds the table name of the defaultcontainer in the database.
	Table = "default_containers"
)

// Columns holds all SQL columns for defaultcontainer fields.
var Columns = []string{
	FieldID,
	FieldStringdef,
	FieldInt,
	FieldBool,
	FieldEnum,
	FieldFloat,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultStringdef holds the default value on creation for the "stringdef" field.
	DefaultStringdef string
	// DefaultInt holds the default value on creation for the "int" field.
	DefaultInt int
	// DefaultBool holds the default value on creation for the "bool" field.
	DefaultBool bool
	// DefaultFloat holds the default value on creation for the "float" field.
	DefaultFloat float64
)

// Enum defines the type for the "enum" enum field.
type Enum string

// Enum1 is the default value of the Enum enum.
const DefaultEnum = Enum1

// Enum values.
const (
	Enum1 Enum = "1"
	Enum2 Enum = "2"
)

func (e Enum) String() string {
	return string(e)
}

// EnumValidator is a validator for the "enum" field enum values. It is called by the builders before save.
func EnumValidator(e Enum) error {
	switch e {
	case Enum1, Enum2:
		return nil
	default:
		return fmt.Errorf("defaultcontainer: invalid enum value for enum field: %q", e)
	}
}
