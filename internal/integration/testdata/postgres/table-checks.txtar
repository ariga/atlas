# Inspect SQL format.
atlas schema inspect --url file://schema.sql --dev-url URL --format '{{ sql . "  " }}' > got
cmp schema.inspected.sql got
# Inspect HCL format.
atlas schema inspect --url file://schema.sql --dev-url URL > got
cmp schema.inspected.hcl got

atlas migrate diff v1 --to file://schema.sql --dev-url URL --format '{{ sql . "  " }}'
cmpmig 0 migration.v1.sql
atlas migrate diff v1-check --to file://schema.sql --dev-url URL --format '{{ sql . "  " }}'
stdout 'The migration directory is synced with the desired state, no changes to be made'

atlas migrate diff v2 --to file://schema.v2.sql --dev-url URL --format '{{ sql . "  " }}'
cmpmig 1 migration.v2.sql
atlas migrate diff v2-check --to file://schema.v2.sql --dev-url URL --format '{{ sql . "  " }}'
stdout 'The migration directory is synced with the desired state, no changes to be made'

atlas migrate diff v3 --to file://schema.v3.sql --dev-url URL --format '{{ sql . "  " }}'
cmpmig 2 migration.v3.sql
atlas migrate diff v3-check --to file://schema.v3.sql --dev-url URL --format '{{ sql . "  " }}'
stdout 'The migration directory is synced with the desired state, no changes to be made'

-- schema.sql --
create table t1 (
  a int constraint c1 check (a > 0),
  b int constraint c2 check (b > 0),
  constraint c3 check (a < b)
);
create table t2 (
  a int constraint c1 check (a > 0),
  c int constraint c4 check (c > 0),
  constraint c5 check (a < c)
);
-- schema.inspected.sql --
-- Create "t1" table
CREATE TABLE "t1" (
  "a" integer NULL,
  "b" integer NULL,
  CONSTRAINT "c1" CHECK (a > 0),
  CONSTRAINT "c2" CHECK (b > 0),
  CONSTRAINT "c3" CHECK (a < b)
);
-- Create "t2" table
CREATE TABLE "t2" (
  "a" integer NULL,
  "c" integer NULL,
  CONSTRAINT "c1" CHECK (a > 0),
  CONSTRAINT "c4" CHECK (c > 0),
  CONSTRAINT "c5" CHECK (a < c)
);
-- schema.inspected.hcl --
table "t1" {
  schema = schema.script_table_checks
  column "a" {
    null = true
    type = integer
  }
  column "b" {
    null = true
    type = integer
  }
  check "c1" {
    expr = "(a > 0)"
  }
  check "c2" {
    expr = "(b > 0)"
  }
  check "c3" {
    expr = "(a < b)"
  }
}
table "t2" {
  schema = schema.script_table_checks
  column "a" {
    null = true
    type = integer
  }
  column "c" {
    null = true
    type = integer
  }
  check "c1" {
    expr = "(a > 0)"
  }
  check "c4" {
    expr = "(c > 0)"
  }
  check "c5" {
    expr = "(a < c)"
  }
}
schema "script_table_checks" {
}
-- migration.v1.sql --
-- Create "t1" table
CREATE TABLE "t1" (
  "a" integer NULL,
  "b" integer NULL,
  CONSTRAINT "c1" CHECK (a > 0),
  CONSTRAINT "c2" CHECK (b > 0),
  CONSTRAINT "c3" CHECK (a < b)
);
-- Create "t2" table
CREATE TABLE "t2" (
  "a" integer NULL,
  "c" integer NULL,
  CONSTRAINT "c1" CHECK (a > 0),
  CONSTRAINT "c4" CHECK (c > 0),
  CONSTRAINT "c5" CHECK (a < c)
);
-- schema.v2.sql --
create table t1 (
  a int constraint c1 check (a > 1),
  b int constraint c2 check (b > 1),
  constraint c3 check (a < b)
);
create table t2 (
  a int constraint c1 check (a > 1),
  c int constraint c4 check (c > 1),
  constraint c5 check (a < c)
);
-- migration.v2.sql --
-- Modify "t1" table
ALTER TABLE "t1" DROP CONSTRAINT "c1", ADD CONSTRAINT "c1" CHECK (a > 1), DROP CONSTRAINT "c2", ADD CONSTRAINT "c2" CHECK (b > 1);
-- Modify "t2" table
ALTER TABLE "t2" DROP CONSTRAINT "c1", ADD CONSTRAINT "c1" CHECK (a > 1), DROP CONSTRAINT "c4", ADD CONSTRAINT "c4" CHECK (c > 1);
-- schema.v3.sql --
create table t1 (
  a int constraint c1 check (a > 1),
  b int constraint c2 check (b > 1),
  -- Rename constraint.
  constraint c4 check (a < b)
);
create table t2 (
  a int constraint c1 check (a > 1),
  c int constraint c4 check (c > 1),
  -- Rename constraint.
  constraint c6 check (a < c)
);
-- migration.v3.sql --
-- Modify "t1" table
ALTER TABLE "t1" DROP CONSTRAINT "c3", ADD CONSTRAINT "c4" CHECK (a < b);
-- Modify "t2" table
ALTER TABLE "t2" DROP CONSTRAINT "c5", ADD CONSTRAINT "c6" CHECK (a < c);